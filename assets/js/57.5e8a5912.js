(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{386:function(i,e,o){"use strict";o.r(e);var d=o(14),a=Object(d.a)({},(function(){var i=this,e=i._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[e("h2",{attrs:{id:"_5-1-音频播放"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-音频播放"}},[i._v("#")]),i._v(" 5.1 音频播放")]),i._v(" "),e("p",[i._v("在libGDX中，可以使用AudioPlayer类来播放音频。首先需要创建一个AudioPlayer对象，然后使用它来加载音频文件。接着在游戏循环中更新音频播放并控制音量。")]),i._v(" "),e("p",[i._v("以下是一个简单的音频播放示例代码：")]),i._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[i._v('import com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration;\nimport com.badlogic.gdx.audio.AudioDevice;\nimport com.badlogic.gdx.audio.AudioPlayer;\nimport com.badlogic.gdx.files.FileHandle;\n\npublic class AudioPlayExample extends ApplicationAdapter {\n    private AudioPlayer audioPlayer;\n    private AudioDevice audioDevice;\n    private FileHandle audioFile;\n\n    @Override\n    public void create() {\n        audioDevice = Gdx.audio;\n        audioFile = Gdx.files.internal("audio.mp3");\n        audioPlayer = new AudioPlayer(audioFile);\n    }\n\n    @Override\n    public void render() {\n        if (!audioPlayer.isPlaying()) {\n            audioPlayer.play();\n        }\n    }\n\n    @Override\n    public void dispose() {\n        audioPlayer.dispose();\n    }\n}\n\n')])])]),e("h2",{attrs:{id:"_5-2-音效管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-音效管理"}},[i._v("#")]),i._v(" 5.2 音效管理")]),i._v(" "),e("p",[i._v("在libGDX中，可以使用Sound类来管理音效。首先需要创建一个Sound对象，然后使用它来加载音效文件。接着在游戏循环中更新音效播放并控制音量。")]),i._v(" "),e("p",[i._v("以下是一个简单的音效管理示例代码：")]),i._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[i._v('import com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration;\nimport com.badlogic.gdx.audio.Sound;\nimport com.badlogic.gdx.files.FileHandle;\n\npublic class SoundManagerExample extends ApplicationAdapter {\n    private Sound sound;\n    private FileHandle soundFile;\n\n    @Override\n    public void create() {\n        soundFile = Gdx.files.internal("sound.wav");\n        sound = Gdx.audio.newSound(soundFile);\n    }\n\n    @Override\n    public void render() {\n        if (Gdx.input.justTouched()) {\n            sound.play();\n        }\n    }\n\n    @Override\n    public void dispose() {\n        sound.dispose();\n    }\n}\n    \n')])])]),e("h2",{attrs:{id:"_5-3-视频播放完整案例代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-视频播放完整案例代码"}},[i._v("#")]),i._v(" 5.3 视频播放完整案例代码")]),i._v(" "),e("p",[i._v("由于libGDX不支持直接播放视频，因此需要使用其他库来实现视频播放功能。例如，可以使用libGDX的扩展库libGDX-video库来实现视频播放。以下是一个简单的视频播放示例代码：")]),i._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[i._v('import com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration;\nimport com.badlogic.gdx.video.VideoPlayer;\nimport com.badlogic.gdx.video.VideoPlayerCreator;\nimport com.badlogic.gdx.video.VideoPlayerGLSurfaceView;\nimport com.badlogic.gdx.video.VideoPlayerListener;\nimport com.badlogic.gdx.video.VideoType;\nimport com.badlogic.gdx.video.VideoViewport;\n\npublic class VideoPlayExample extends ApplicationAdapter implements VideoPlayerListener {\n    private VideoPlayer videoPlayer;\n    private VideoPlayerGLSurfaceView videoView;\n    private VideoViewport videoViewport;\n    private VideoType videoType;\n    private String videoPath;\n\n    @Override\n    public void create() {\n        videoType = VideoType.SCREEN;\n        videoPath = "video.mp4";\n        videoPlayer = VideoPlayerCreator.createVideoPlayer();\n        videoPlayer.setVideoPath(videoPath);\n        videoPlayer.setVideoType(videoType);\n        videoPlayer.addListener(this);\n        videoViewport = new VideoViewport();\n        videoView = new VideoPlayerGLSurfaceView(videoPlayer, videoViewport);\n        Gdx.gl.glClearColor(0, 0, 0, 1);\n    }\n\n    @Override\n    public void render() {\n        videoPlayer.update();\n        videoView.render();\n    }\n\n    @Override\n    public void dispose() {\n        videoPlayer.dispose();\n        videoView.dispose();\n    }\n}\n\n')])])])])}),[],!1,null,null,null);e.default=a.exports}}]);